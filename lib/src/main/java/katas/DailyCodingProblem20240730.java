/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package katas;

import java.util.Arrays;

public class DailyCodingProblem20240730 {
    /*
    Good morning! Here's your coding interview problem for today.
    This problem was recently asked by Google.
    Given a list of numbers and a number k, return whether any two numbers from the list add up to k.
    For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.
    Bonus: Can you do this in one pass?

    Sort the list
    For each number
        is it less than k?
            if yes, is k - number in the list?
                if yes, return true
     */

    public boolean someLibraryMethod() {
        return true;
    }

    public boolean areRequiredNumbersInList(int[] numbers, int k) {
        Arrays.sort(numbers);
        for (int number : numbers) {
            if (Arrays.binarySearch(numbers, k - number) >= 0) {
                return true;
            }

        }
        return false;
    }
}
